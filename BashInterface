#!/bin/bash

function printHeader {
    clear
    echo "----------------------------------"
    echo "----------Haskell RSA üîê----------"
    echo "----------------------------------"
    echo $1
    echo ""
}

function generateKey {
    printHeader  "         [Generate Key]"
    echo "1. 512-bit"
    echo "2. 1024-bit"
    echo "3. 2048-bit"
    echo "4. 5096-bit"
    echo "5. Cancel"
    echo ""

    read -p 'Select Key-Strength: ' option
    while [[ ! $option =~ ^[12345cCqQ]{1}$ ]]; do
        echo "Invalid option!"
        read -p 'Select Key-Strength: ' option
    done

    if [ $option = "1" ]; then
        ./generateKey 512
    elif [ $option = "2" ]; then
        ./generateKey 1024
    elif [ $option = "3" ]; then
        ./generateKey 2048
    elif [ $option = "4" ]; then
        ./generateKey 5096 
    elif [[ $option =~ [5cCqQ] ]]; then
        return [n]
    fi

    read -p 'Press enter to continue'
}

function encrypt {
    printHeader "           [Encrypt]"
    read -p 'Enter modulus: ' modulus
    #read -p 'Enter public exponent: ' e
    e=65537
    read -p 'Enter text to be encrypted: ' message

    ./encrypt $message $e $modulus  #Haskell Executable

    read -p 'Press enter to continue'
}

function decrypt {
    printHeader "           [Decrypt]"
    read -p 'Enter modulus: ' modulus
    read -p 'Enter private key: ' d
    read -p 'Enter ciphertext: ' cipher

    ./decrypt $cipher $d $modulus   #Haskell Executable

    read -p 'Press enter to continue'
}

#Main Body of CLI
while [ True ]; do
    printHeader "          [Main Menu]"
    echo "1. Generate Key"
    echo "2. Encrypt"
    echo "3. Decrypt"
    echo "4. Quit (or Ctrl+C)"
    echo ""

    read -p 'Select: ' option
    while [[ ! $option =~ ^[1234gGeEdDqQ]{1}$ ]]; do
        echo "Invalid option!"
        read -p 'Select: ' option
    done

    if [[ $option =~ [1gG] ]]; then
        generateKey
    elif [[ $option =~ [2eE] ]]; then
        encrypt
    elif [[ $option =~ [3dD] ]]; then
        decrypt
    elif [[ $option =~ [4qQ] ]]; then
        exit 1
    fi
done
